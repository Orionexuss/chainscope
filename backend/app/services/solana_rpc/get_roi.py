from datetime import datetime

from .utils.get_signatures import get_signatures
from .utils.get_transaction import get_transaction

programs = {
    "jupiter_aggregator_v6": "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",
    "jupiter_aggregator_v4": "JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB",
    "jupier_dca": "DCA265Vj8a9CEuX1eb1LWRnDT7uK6q1xMipnNyatn23M",
    "jupiter_limit_order_v2": "j1o2qRpjcyUwEvwtcfhEQefh773ZgjxcVRry7LDqg5X",
    "raydium_launchpad": "LanMV9sAd7wArD4vJFi2qDdfnVhFxYSUg6eADduJ3uj",
    "raydium_concentrated_liquidity": "CAMMCzo5YL8w4VFF8KVHrK22GGUsp5VTaW7grrKgrWqK",
    "raydium_cpmm": "CPMMoo8L3F4NbTegBCKVNunggL7H1ZpdTHKxQB5qKP1C",
    "raydium_liquidity_pool_amm": "5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h",
    "raydium_liquidity_pool_v4": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
    "raydium_liquidity_pool_v3": "27haf8L6oxUeXrHrgEgsexjSY5hbVUWEmvv9Nyxg8vQv",
    "raydium_liquidity_pool_v2": "RVKd61ztZW9GUwhRbbLoYVRE5Xf1B2tVscKqwZqXgEr",
    "raydium_amm_routing": "routeUGWgWzqBWFcrCfv8tritsqukccJPu3q5GPP3xS",
    "orca_whirlpool": "whirLbMiicVdio4qvUfM5KAg6Ct8VwpYzGff3uctyCc",
    "orca_swap_v2": "9W959DqEETiGZocYWCQPaJ6sBmUzgfxXfqGeTEdp3aQP",
    "orca_swap_v1": "DjVE6JNiYqPL2QXyCUUh8rNjHrbz9hXHNYt99MQ59qw1",
    "meteora_dlmm_program": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo",
    "meteoras_pools_program": "Eo7WjKq67rjJQSZxS6z3YkapzY3eMj6Xy8X5EQVn5UaB",
    "phoenix": "PhoeNiXZ8ByJGLkxNfZRnkUfjvmuYqLR89jjFHGqdXY",
    "lifinity_swap_v2": "2wT8Yq49kHgDzXuPxZSaeLaH1qbmGXtEyPy64bL7aD3c",
    "lifinity_swap": "EewxydAPCCVuNEyrVN68PuSYdQ7wKn27V9Gjeoi8dy3S",
    "saber_stable_warp": "SSwpkEEcbUqx4vtoEByFjSkhKdCT862DNVb52nZg1UZ",
    "saber_decimal_wrapper": "DecZY86MU5Gj7kppfUCEmd4LbXXuyZH1yHaP2NTqdiZB",
    "invariant_swap": "HyaB3W9q6XdA5xwpU4XnSZV94htfmbmqJXZcEbRaJutt",
    "sanctum_router": "stkitrT1Uoy18Dk1fTrgPw8W6MVzoCfYoAFT4MLsmhq",
    "sanctum_s_controller": "5ocnV1qiCgaQR8Jb8xWnVbApfaygJ8tNoZfgPwsgx9kx",
    "openbook_v2": "opnb2LAfJYbRMAHHvqjCwQxanZn7ReEHp1k81EohpZb",
    "bonk_swap": "BSwp6bEBihVLdqJRKGgzjcGLHkcTuzmSo1TQkHepzH8p",
    "marinade_finance": "MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD",
    "fluxbeam_program": "FLUXubRmkEi2q6K3Y9kBPg9248ggaZVsoSFhtJHSrm1X",
    "goosefx_v2": "GFXsSL5sSaDfNFQUYsHekbWBW1TsFdjDYzACh62tEHxn",
    "mercurial_stable_swap": "MERLuDFBMmsHnsBPZw2sDQZHvXFMwp8EdjudcU2HKky",
    "dooar_swap": "Dooar9JkhdZ7J3LHN3A7YCuoGRUggXhQaG4kijfLGU2j",
    "crema_finance": "CLMM9tUoggJu2wagPkkqs9eFG4BWhVBZWkP1qv3Sp7tR",
    "dexlab_swap": "DSwpgjMvXhtGn6BsbqmacdBZyfLj6jSWf3HJpdJtmg6N",
    "saros_amm": "SSwapUtytfBdBn1b9NUGG6foMVPtcWgpRU32HToDUZr",
    "aldrin_amm_v2": "CURVGoZn8zycx6FXwwevgBTB2gVvdbGTEpvMJDbgs2t4",
    "cropper_whirlpool": "H8W3ctz92svYg6mkn1UtGfu2aQr2fnUFHM1RhScEtQDt",
    "cropper_finance": "CTMAxxk34HjKWxQ3QLZK1HpaLXmBveao3ESePXbiyfzh",
    "token_swap_program": "SwaPpA9LAaLfeLi3a68M4DjnLqgtticKg6CnyNwgAC8",
    "helium_treasury_management": "treaf4wWBBty3fHdyBpo35Mz84M8k3heKXmjmi9vFt5",
    "penguin_finance": "PSwapMdSai8tjrEXcxFeQth87xC4rRsa4VA5mhGhXkP",
    "step_finance_program_swap": "SSwpMgqNDsyV7mAgN9ady4bDVu5ySjmmXejXvy2vLt1",
    "marginifi": "MFLQPPPPjNinkdKoy2odNFBhvpY43XtCDZjBwG2fwn5",
    "marginifi_v2": "MFv2hWf31Z9kbCa1snEPYctwafyhdvnV7FZnsebVacA",
    "kamino_lending": "KLend2g3cP87fffoy8q1mQqGKjrxjC8boSyAYavgmjD",
    "kamino": "6LtLpnUFNByNXLyCoK9wA2MykKAmQNZKBdY8s47dehDc",
    "hawksight": "FqGg2Y1FNxMiGd51Q6UETixQWkF5fB92MysbYogRJb3P",
    "pump_fun": "6EF8rrecthR5Dkzon8Nwu78hRvfCKubJ14M5uBEwF6P",
    "pump_fun_amm": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
    "moonit": "MoonCVVNZFSYkqNXP6bxHLPL6QQJiMagDL3qcqUQTrG",
    "token_program": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
    "token_2022_program": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",
    "stake_program": "Stake11111111111111111111111111111111111111",
    "ape_pro": "JSW99DKmxNyREQM14SQLDykeBvEUG63TeohrvmofEiw",
    "stabble_stable_swap": "swapNyd8XiQwJ6ianp9snpu4brUqFxadzvHebnAXjJZ",
    "stabble_weight_swap": "swapFpHZwjELNnjvThjajtiVmkz3yPQEHjLtka2fwHW",
}


def get_roi(address: str, time: datetime):
    pass
